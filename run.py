# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'final.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import pandas as pd
from PyQt5 import QtCore, QtGui, QtWidgets
from chatB import *
from PyQt5.QtWidgets import QDialog, QMainWindow,QApplication,  QMessageBox, QWidget, QVBoxLayout, QScrollArea
from weather_module import getCoordinates, getWeatherInfo, getForecast
import datetime
import matplotlib.pyplot as plt
from matplotlib.backends.backend_qt5agg import FigureCanvasQTAgg as FigureCanvas
from draw_graph import MatplotlibWidget


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(817, 607)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("sources/logo.webp"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        MainWindow.setStyleSheet("QMainWindow{\n"
"    background-color: rgb(255, 255, 255);\n"
"    }\n"
"\n"
"QLabel#title {\n"
"    \n"
"    background-color: qlineargradient(spread:pad, x1:0.46, y1:0.6145, x2:0, y2:1, stop:0 rgba(7, 11, 0, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border: 1px solid #cccccc;\n"
"    color: #000000;\n"
"    color:  rgb(245, 0, 0);\n"
"    font-size: 28px;\n"
"    font-family: Arial;\n"
"    z-index: 1;\n"
"    box-shadow: 0 0 10px 1px #cccccc;\n"
"    \n"
"    }\n"
"QLabel#reportTitle {\n"
"    background-color: qlineargradient(spread:pad, x1:0.46, y1:0.6145, x2:0, y2:1, stop:0 rgba(7, 11, 0, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border: 1px solid #cccccc;\n"
"    border: 1px solid #cccccc;\n"
"    color: #000000;\n"
"    color:  rgb(245, 0, 0);\n"
"    font-size: 28px;\n"
"    font-family: Arial;\n"
"    }\n"
"QLabel#forecastTitle {\n"
"    background-color: qlineargradient(spread:pad, x1:0.46, y1:0.6145, x2:0, y2:1, stop:0 rgba(7, 11, 0, 255), stop:1 rgba(255, 255, 255, 255));\n"
"    border: 1px solid #cccccc;\n"
"    border: 1px solid #cccccc;\n"
"    color: #000000;\n"
"    color:  rgb(245, 0, 0);\n"
"    font-size: 28px;\n"
"    font-family: Arial;\n"
"    }\n"
"\n"
"QPushButton{\n"
"      background-color: #000;\n"
"      color: #fff;\n"
"     border-radius:   10px;\n"
"      text-transform: uppercase;\n"
"      font-weight: bold;\n"
"      font-size: 16px;\n"
"      padding: 10px 20px;\n"
"}\n"
"\n"
"QPushButton:hover {\n"
"      background-color: #222;\n"
"      box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.3);\n"
"    }\n"
"\n"
"QPushButton:active {\n"
"      background-color: #333;\n"
"      box-shadow: 0 6px 12px 0 rgba(0, 0, 0, 0.4);\n"
"    }\n"
"QLineEdit {\n"
"      background-color: #fff;\n"
"      border: 1px solid #ccc;\n"
"      border-radius: 10px;\n"
"      padding: 10px;\n"
"      width: 200px;\n"
"      outline: none;\n"
"}\n"
"\n"
".line-edit:focus {\n"
"      background-color: #f0f0f0;\n"
"      border: 1px solid #999;\n"
"}\n"
"\n"
"QLabel#locationLbl{\n"
"      font-size: 16px;\n"
"     font-weight: bold;\n"
"      font-style: italic;\n"
"}\n"
"\n"
"QLabel#dateLbl{\n"
"    color: rgb(241, 0, 0);\n"
"      font-size: 12px;\n"
"     margin-bottom: 10px;\n"
"}\n"
"\n"
"QLabel#tempLbl {\n"
"      font-size: 24px;\n"
"      font-weight: bold;\n"
"    }\n"
"QLabel#weatherLbl {\n"
"      font-size: 12px;\n"
"    font-weight: bold;\n"
"      margin-bottom: 10px;\n"
"}")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setObjectName("stackedWidget")
        self.homePage = QtWidgets.QWidget()
        self.homePage.setObjectName("homePage")
        self.gridLayout_9 = QtWidgets.QGridLayout(self.homePage)
        self.gridLayout_9.setObjectName("gridLayout_9")
        self.title = QtWidgets.QLabel(self.homePage)
        self.title.setObjectName("title")
        self.gridLayout_9.addWidget(self.title, 0, 0, 1, 1)
        self.label = QtWidgets.QLabel(self.homePage)
        self.label.setMinimumSize(QtCore.QSize(781, 160))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("sources/wallpaper.jpg"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.gridLayout_9.addWidget(self.label, 1, 0, 1, 1)
        self.gridLayout_8 = QtWidgets.QGridLayout()
        self.gridLayout_8.setObjectName("gridLayout_8")
        self.gridLayout_7 = QtWidgets.QGridLayout()
        self.gridLayout_7.setObjectName("gridLayout_7")
        self.gridLayout_2 = QtWidgets.QGridLayout()
        self.gridLayout_2.setObjectName("gridLayout_2")
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_2.addItem(spacerItem, 0, 0, 1, 1)
        self.searchBar = QtWidgets.QLineEdit(self.homePage)
        self.searchBar.setObjectName("searchBar")
        self.gridLayout_2.addWidget(self.searchBar, 0, 1, 1, 1)
        self.searchBtn = QtWidgets.QPushButton(self.homePage)
        self.searchBtn.setObjectName("searchBtn")
        self.gridLayout_2.addWidget(self.searchBtn, 0, 2, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_2.addItem(spacerItem1, 0, 3, 1, 1)
        self.gridLayout_7.addLayout(self.gridLayout_2, 0, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_7.addItem(spacerItem2, 0, 1, 1, 1)
        self.gridLayout_8.addLayout(self.gridLayout_7, 0, 0, 1, 1)
        self.gridLayout_6 = QtWidgets.QGridLayout()
        self.gridLayout_6.setObjectName("gridLayout_6")
        spacerItem3 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_6.addItem(spacerItem3, 0, 0, 1, 1)
        self.frame = QtWidgets.QFrame(self.homePage)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.frame)
        self.gridLayout_3.setObjectName("gridLayout_3")
        self.weatherLbl = QtWidgets.QLabel(self.frame)
        self.weatherLbl.setObjectName("weatherLbl")
        self.gridLayout_3.addWidget(self.weatherLbl, 6, 2, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_3.addItem(spacerItem4, 0, 1, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem5, 5, 2, 1, 1)
        self.wallpaper2 = QtWidgets.QLabel(self.frame)
        self.wallpaper2.setText("")
        self.wallpaper2.setPixmap(QtGui.QPixmap("sources/temperature.png"))
        self.wallpaper2.setObjectName("wallpaper2")
        self.gridLayout_3.addWidget(self.wallpaper2, 2, 4, 3, 1)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem6, 3, 2, 1, 1)
        self.locationLbl = QtWidgets.QLabel(self.frame)
        self.locationLbl.setObjectName("locationLbl")
        self.gridLayout_3.addWidget(self.locationLbl, 2, 2, 1, 1)
        self.wallpaper1 = QtWidgets.QLabel(self.frame)
        self.wallpaper1.setText("")
        self.wallpaper1.setPixmap(QtGui.QPixmap("sources/temperature.png"))
        self.wallpaper1.setObjectName("wallpaper1")
        self.gridLayout_3.addWidget(self.wallpaper1, 0, 0, 5, 1)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_3.addItem(spacerItem7, 1, 2, 1, 1)
        self.dateLbl = QtWidgets.QLabel(self.frame)
        self.dateLbl.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.dateLbl.setObjectName("dateLbl")
        self.gridLayout_3.addWidget(self.dateLbl, 0, 2, 1, 1)
        self.tempLbl = QtWidgets.QLabel(self.frame)
        self.tempLbl.setAlignment(QtCore.Qt.AlignCenter)
        self.tempLbl.setObjectName("tempLbl")
        self.gridLayout_3.addWidget(self.tempLbl, 4, 2, 1, 1)
        spacerItem8 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_3.addItem(spacerItem8, 2, 3, 1, 1)
        self.gridLayout_6.addWidget(self.frame, 0, 1, 1, 1)
        spacerItem9 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_6.addItem(spacerItem9, 0, 2, 1, 1)
        self.gridLayout_8.addLayout(self.gridLayout_6, 1, 0, 1, 1)
        spacerItem10 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout_8.addItem(spacerItem10, 2, 0, 1, 1)
        self.gridLayout_5 = QtWidgets.QGridLayout()
        self.gridLayout_5.setObjectName("gridLayout_5")
        spacerItem11 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_5.addItem(spacerItem11, 0, 0, 1, 1)
        self.gridLayout_4 = QtWidgets.QGridLayout()
        self.gridLayout_4.setObjectName("gridLayout_4")
        self.forecastBtn = QtWidgets.QPushButton(self.homePage)
        self.forecastBtn.setObjectName("forecastBtn")
        self.gridLayout_4.addWidget(self.forecastBtn, 0, 0, 1, 1)
        spacerItem12 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_4.addItem(spacerItem12, 0, 1, 1, 1)
        self.botBtn = QtWidgets.QPushButton(self.homePage)
        self.botBtn.setObjectName("botBtn")
        self.gridLayout_4.addWidget(self.botBtn, 0, 2, 1, 1)
        spacerItem13 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_4.addItem(spacerItem13, 0, 3, 1, 1)
        self.reportsBtn = QtWidgets.QPushButton(self.homePage)
        self.reportsBtn.setObjectName("reportsBtn")
        self.gridLayout_4.addWidget(self.reportsBtn, 0, 4, 1, 1)
        self.gridLayout_5.addLayout(self.gridLayout_4, 0, 1, 1, 1)
        spacerItem14 = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout_5.addItem(spacerItem14, 0, 2, 1, 1)
        self.gridLayout_8.addLayout(self.gridLayout_5, 3, 0, 1, 1)
        self.gridLayout_9.addLayout(self.gridLayout_8, 2, 0, 1, 1)
        self.stackedWidget.addWidget(self.homePage)
        self.reportPage = QtWidgets.QWidget()
        self.reportPage.setObjectName("reportPage")
        self.gridLayout_11 = QtWidgets.QGridLayout(self.reportPage)
        self.gridLayout_11.setObjectName("gridLayout_11")
        self.gridLayout_10 = QtWidgets.QGridLayout()
        self.gridLayout_10.setObjectName("gridLayout_10")
        self.reportTitle = QtWidgets.QLabel(self.reportPage)
        self.reportTitle.setObjectName("reportTitle")
        self.gridLayout_10.addWidget(self.reportTitle, 0, 0, 1, 1)
        
        self.reportsArea = QtWidgets.QScrollArea(self.reportPage)
        self.reportsArea.setWidgetResizable(True)
        self.reportsArea.setObjectName("reportsArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scroll_layout = QVBoxLayout(self.scrollAreaWidgetContents)
        
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 777, 484))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.reportsArea.setWidget(self.scrollAreaWidgetContents)
        
        self.gridLayout_10.addWidget(self.reportsArea, 1, 0, 1, 1)
        self.gridLayout_11.addLayout(self.gridLayout_10, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.reportPage)
        self.forecastPage = QtWidgets.QWidget()
        self.forecastPage.setObjectName("forecastPage")
        self.gridLayout_13 = QtWidgets.QGridLayout(self.forecastPage)
        self.gridLayout_13.setObjectName("gridLayout_13")
        self.gridLayout_12 = QtWidgets.QGridLayout()
        self.gridLayout_12.setObjectName("gridLayout_12")
        self.forecastTitle = QtWidgets.QLabel(self.forecastPage)
        self.forecastTitle.setObjectName("forecastTitle")
        self.gridLayout_12.addWidget(self.forecastTitle, 0, 0, 1, 1)
        
        self.forecastArea = QtWidgets.QScrollArea(self.forecastPage)
        self.forecastArea.setWidgetResizable(True)
        self.forecastArea.setObjectName("forecastArea")
        self.scrollAreaWidgetContents_2 = QtWidgets.QWidget()
        self.scroll_layout2 = QVBoxLayout(self.scrollAreaWidgetContents_2)
        self.scrollAreaWidgetContents_2.setGeometry(QtCore.QRect(0, 0, 777, 486))
        self.scrollAreaWidgetContents_2.setObjectName("scrollAreaWidgetContents_2")
        
        self.forecastArea.setWidget(self.scrollAreaWidgetContents_2)
        
        self.gridLayout_12.addWidget(self.forecastArea, 1, 0, 1, 1)
        self.gridLayout_13.addLayout(self.gridLayout_12, 0, 0, 1, 1)
        self.stackedWidget.addWidget(self.forecastPage)
        self.gridLayout.addWidget(self.stackedWidget, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 817, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionHome = QtWidgets.QAction(MainWindow)
        self.actionHome.setObjectName("actionHome")
        self.actionReports = QtWidgets.QAction(MainWindow)
        self.actionReports.setObjectName("actionReports")
        self.actionForecast = QtWidgets.QAction(MainWindow)
        self.actionForecast.setObjectName("actionForecast")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.menuFile.addAction(self.actionHome)
        self.menuFile.addAction(self.actionReports)
        self.menuFile.addAction(self.actionForecast)
        self.menuFile.addAction(self.actionExit)
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.searchBar, self.searchBtn)
        MainWindow.setTabOrder(self.searchBtn, self.forecastBtn)
        MainWindow.setTabOrder(self.forecastBtn, self.botBtn)
        MainWindow.setTabOrder(self.botBtn, self.reportsBtn)
        MainWindow.setTabOrder(self.reportsBtn, self.reportsArea)
        MainWindow.setTabOrder(self.reportsArea, self.forecastArea)

        self.actionHome.triggered.connect(self.gohomePage)
        self.actionReports.triggered.connect(self.goreportPage)
        self.actionForecast.triggered.connect(self.goforecastPage)

        self.reportsBtn.clicked.connect(self.showReports)
        self.reportsBtn.clicked.connect(self.goreportPage)
        self.botBtn.clicked.connect(self.openChatBot)
        self.searchBtn.clicked.connect(self.setWeather)

        self.dates = []
        self.min_temps = []
        self.max_temps = []
        self.temps = []
        self.humidities = []
        self.pressures = []
        self.dataframe = []
        self.date_times = []

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Open Weather"))
        self.title.setText(_translate("MainWindow", "Open Weather"))
        self.searchBtn.setText(_translate("MainWindow", "SEARCH"))
        self.weatherLbl.setText(_translate("MainWindow", "Check weather"))
        self.locationLbl.setText(_translate("MainWindow", "Location"))
        self.dateLbl.setText(_translate("MainWindow", "Date and Time"))
        self.tempLbl.setText(_translate("MainWindow", "- - : - -"))
        self.forecastBtn.setText(_translate("MainWindow", "Forecast"))
        self.botBtn.setText(_translate("MainWindow", "Bot"))
        self.reportsBtn.setText(_translate("MainWindow", "Reports"))
        self.reportTitle.setText(_translate("MainWindow", "Reports"))
        self.forecastTitle.setText(_translate("MainWindow", "Forecast"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.actionHome.setText(_translate("MainWindow", "Home"))
        self.actionReports.setText(_translate("MainWindow", "Reports"))
        self.actionForecast.setText(_translate("MainWindow", "Forecast"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))

    def gohomePage(self):
        self.stackedWidget.setCurrentIndex(0)

    def goreportPage(self):
        self.stackedWidget.setCurrentIndex(1)

    def goforecastPage(self):
        self.stackedWidget.setCurrentIndex(2)

    def openChatBot(self):
        # Create an instance of the chatbot dialog and show it
        self.chatbot_dialog = ChatBotDialog()  # Use the ChatBotDialog class you defined
        self.chatbot_dialog.exec_()

    def showPopUp(self, msg, icon, com_msg):
        msgBox = QMessageBox()
        msgBox.setText(msg)
        if com_msg:
            msgBox.setDetailedText(com_msg)
        msgBox.setIcon(icon)
        msgBox.setStandardButtons(QMessageBox.Ok)
        msgBox.exec_()

    def getTime(self):
        today = datetime.datetime.today()
        return today.strftime("%B %d, %H:%M%p")

    def showReports(self):
        w1 = MatplotlibWidget()
        w1.eightHourTemperatures(self.dates, self.temps)

        w2 = MatplotlibWidget()
        w2.fiveDayTemperatures(self.dates, temps)

        self.scroll_layout.addWidget(w1)
        self.scroll_layout.addWidget(w2)
        self.reportsArea.setWidget(self.scrollAreaWidgetContents)
        
        
        

    def showForecasts(self):
        w3 = MatplotlibWidget()
        w4.eightHourTemperatures(self.dates, self.temps)

        w3 = MatplotlibWidget()
        w4.fiveDayTemperatures(self.dates, temps)

        self.scroll_layout2.addWidget(w3)
        self.scroll_layout2.addWidget(w4)
        self.forecastArea.setWidget(self.scrollAreaWidgetContents_2)

    def getSetData(self, data):
        for i in range(len(data['list'])):
            self.dates.append(data['list'][i]['dt_txt'])
            self.min_temps.append(data['list'][i]['main']['temp_min'] - 273.15)
            self.temps.append(data['list'][i]['main']['temp'] - 273.15)
            self.max_temps.append(data['list'][i]['main']['temp_max'] - 273.15)
            self.humidities.append(data['list'][i]['main']['humidity'])
            self.pressures.append(data['list'][i]['main']['pressure'])
            
        temperatures = []

        for i in range(len(data['list'])):
            row = []
            row.append(data['list'][i]['dt_txt'])
            row.append(data['list'][i]['main']['temp_min'])
            row.append(data['list'][i]['main']['temp'])
            row.append(data['list'][i]['main']['temp_max'])
            temperatures.append(row)
            columns = ['Date_Time', "Minimum Temperature","Temperature", "Maximum Temperature"]
            self.dataframe = pd.DataFrame(temperatures, columns=columns)

        #converting temperature from celvin to celcius

        self.dataframe['Minimum Temperature'] = self.dataframe['Minimum Temperature'] - 273.15
        self.dataframe['Temperature'] = self.dataframe['Temperature'] - 273.15
        self.dataframe['Maximum Temperature'] = self.dataframe['Maximum Temperature'] - 273.15
        self.dataframe.columns

        self.date_times = self.dataframe.pop('Date_Time')
        self.date_times = pd.to_datetime(self.date_times, format="%Y-%m-%d %H:%M:%S")

    def setWeather(self):
        if self.searchBar.text() == "":
            self.showPopUp("Please enter location",QMessageBox.Information, "")
        else:
            location = self.searchBar.text()
            weather_data = getWeatherInfo(location)
            time = self.getTime()
            self.dateLbl.setText(time)
            self.locationLbl.setText(weather_data['loc'])
            self.tempLbl.setText(f"{weather_data['temperature'][0]}\u00b0C")
            self.weatherLbl.setText(f"Weather look like {weather_data['weather']}")
            weather_logos = {'rain':'sources/rain.png',
                             'strom':'sources/strom.png',
                             'snow':'sources/snow.png',
                             'party cloudy':'sources/party_cloudy.png',
                             'sun':'sources/sun.png',
                             'clouds':'sources/clouds.png',
                            'overcast clouds':'sources/clouds.png',
                             'sunny':'sources/sun.png'
                             }
            if weather_data['weather'].lower() in weather_logos:
                self.wallpaper1.setPixmap(QtGui.QPixmap(weather_logos[weather_data['weather']]))
                self.wallpaper2.setPixmap(QtGui.QPixmap(weather_logos[weather_data['weather']]))
            self.getSetData(getForecast(location))


class ChatBotDialog(QDialog):
    def __init__(self):
        super(ChatBotDialog, self).__init__()
        self.ui = Ui_Dialog()
        self.ui.setupUi(self)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
